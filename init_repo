#!/bin/sh
# Copyright (c) 2012 Michael-Keith Bernard
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Fail fast
set -e

# General directory settings
CURRENT=`pwd`
BUNDLE="${CURRENT}/bundle"

# Section configuration
SUBMODULE="yes"
SNIPMATE="yes"
COMMANDT="yes"

usage() {
  echo "Usage: init_repo"
  echo "  --help - this menu"
  echo "  --skip-submodule - don't load submodules"
  echo "  --skip-snipmate - don't remote snipmate/snippets"
  echo "  --skip-commandt - don't compile Command-T"
  exit
}

for opt in "$@"
do
  case "$opt" in
    --help) usage;;
    --skip-submodule) SUBMODULE="no"; echo "Skipping submodule.";;
    --skip-snipmate) SNIPMATE="no"; echo "Skipping snipmate.";;
    --skip-commandt) COMMANDT="no"; echo "Skipping Command-T";;
  esac
done

echo "Initializing vim-dotfiles, by Michael-Keith Bernard"

# Fetch all the submodules if we're in the root directory
if [ "$SUBMODULE" = "yes" ]; then
  if [ -d $CURRENT/.git ]; then
    echo "Running git-submodule commands..."
    git submodule init
    git submodule update

    git submodule foreach git submodule init
    git submodule foreach git submodule update
  else
    echo "Run this command from the root of the project."
    exit 1
  fi
fi

# Remove snipmate/snippets directory
if [ "$SNIPMATE" = "yes" ]; then
  if [ -d $BUNDLE/snipmate/snippets ]; then
    echo "Removing snipmate/snippets directory..."
    rm -rf $BUNDLE/snipmate/snippets
  fi
fi

# Build command-t
if [ "$COMMANDT" = "yes" ]; then
  if [ -d $BUNDLE/command-t ]; then
    echo "Building Command-T..."
    cd $BUNDLE/command-t
    rake make
    cd $CURRENT
  fi
fi

echo "Finished initializing vim-dotfiles."
echo "To symlink vimrc: ln -s ${HOME}/.vimrc ${CURRENT}/vimrc"
